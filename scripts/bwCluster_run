#!/bin/sh

# Usage: ./bwCluster_run <workset_name>

OLD_DIR="$(pwd)"

if [ ${#} -ne 1 ] ; then
	echo "Usage: ${0} <workset_name>"
	return 1
elif [ ! -d "${1}" ] ; then
	echo "Workset '${1}' not found"
	return 1
fi

cd "${1}"

if [ ! -x graphedit -o ! -r cmdline -o ! -d graphs -o ! -d work_available -o ! -d work_executing -o ! -d work_done -o ! -d work_failed ] ; then
	echo "'${1}' doesn't look like a valid workset"
	cd "${OLD_DIR}"
	return 1
fi

for w in work_available/* ; do
	w="${w#work_available/}"
	#mv "work_available/${w}" "work_executing/${w}" # mv is not as atomic as I thought
	mkdir "work_executing/${w}"
	if [ "$?" -eq 0 ] ; then
		work="${w}"
		rmdir "work_available/${w}"
		break
	fi
done
# we now own "work_available/${w}", latter moves on it are safe

if [ "${#work}" -eq 0 ] ; then
	echo "no work found"
	cd "${OLD_DIR}"
	return 1
fi

# $work is graph.combination.repetition

graph="${work%.*.*}"
combination="${work%.*}"
combination="${combination##*.}"
repetition="${work##*.}"

# SLURM_JOB_CPUS_PER_NODE=28(x2)
if [ "${#SLURM_JOB_CPUS_PER_NODE}" -ne 0 ] ; then
	threads="-j ${SLURM_JOB_CPUS_PER_NODE%%(*}"
fi
sh cmdline ${threads} -X "${combination}" "graphs/${graph}" > "results/${work}.eval"
if [ "$?" -eq 0 ] ; then
	mv "work_executing/${work}" "work_done/${work}"
else
	mv "work_executing/${work}" "work_failed/${work}"
fi

cd "${OLD_DIR}"
